{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is API Documentation for Service E-Jakti KBS Swagger Services.",
        "title": "Service E-Jakti KBS Swagger API Documentation",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "2.0"
    },
    "basePath": "/api",
    "paths": {
        "/v1/areas": {
            "get": {
                "description": "View list area",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area"
                ],
                "summary": "API List Area (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "example": "Area 0",
                        "description": "Area Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "A-0",
                        "description": "Area Code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/areaModel.GetListAreaResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/areaModel.GetListAreaResponse"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create area for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area"
                ],
                "summary": "API Create Area (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Request Parameters",
                        "name": "AreaRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/areaModel.CreateAreaRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/areas/{code}": {
            "get": {
                "description": "Get detail area for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Area"
                ],
                "summary": "API Get Detail Area (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Area Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/areaModel.DetailAreaResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/areaModel.DetailAreaResponse"
                        }
                    }
                }
            }
        },
        "/v1/channels": {
            "get": {
                "description": "Get list channel for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "API Get List Channel (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "example": "Tiket.com",
                        "description": "Channel Title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "C-0001",
                        "description": "Channel Code",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create channel for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "API Create Channel (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Code",
                        "name": "code",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Logo",
                        "name": "logo",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Api Base URL",
                        "name": "api_base_url",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/channels/{code}": {
            "get": {
                "description": "Get detail channel for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "API Get Detail Channel (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Channel Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/vehicleModel.DetailVehicleResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/vehicleModel.DetailVehicleResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update channel for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "API Get Update Channel (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "example": "TK",
                        "description": "Channel Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Title",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Description",
                        "name": "description",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Logo",
                        "name": "logo",
                        "in": "formData"
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Delete channel for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Channel"
                ],
                "summary": "API Get Delete Channel (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "example": "TK",
                        "description": "Channel Code",
                        "name": "code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/health-check": {
            "get": {
                "description": "LOV untuk health check",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "HealthCheck"
                ],
                "summary": "Get Health Check",
                "responses": {}
            }
        },
        "/v1/vehicles": {
            "get": {
                "description": "Get list vehicle for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle"
                ],
                "summary": "API Get List Vehicle (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "example": "Avanza",
                        "description": "Vehicle Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "B-01",
                        "description": "Vehicle Brand Code",
                        "name": "brand_code",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Vehicle Type ID",
                        "name": "type_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 25,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create vehicle for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle"
                ],
                "summary": "API Create Vehicle (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Brand ID",
                        "name": "brand_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Model",
                        "name": "model",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fuel Type",
                        "name": "fuel_type",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Type ID",
                        "name": "type_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Year Of Manufacture",
                        "name": "year",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Vehicle Transmission",
                        "name": "transmission",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Max Bag Number",
                        "name": "max_bag_number",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Seat Number",
                        "name": "seat_number",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "image",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/v1/vehicles/brand": {
            "post": {
                "description": "Create brand for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "API Create Brand (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Brand Name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Brand Logo",
                        "name": "logo",
                        "in": "formData"
                    }
                ],
                "responses": {}
            }
        },
        "/v1/vehicles/brands": {
            "get": {
                "description": "View list brands",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Brand"
                ],
                "summary": "API List Brands (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/brandModel.GetListBrandResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/brandModel.GetListBrandResponse"
                            }
                        }
                    }
                }
            }
        },
        "/v1/vehicles/transmissions": {
            "get": {
                "description": "View list transmission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transmission"
                ],
                "summary": "API List Transmission (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/transmissionModel.Transmission"
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/transmissionModel.Transmission"
                            }
                        }
                    }
                }
            }
        },
        "/v1/vehicles/type": {
            "post": {
                "description": "Create vehilce type for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle Type"
                ],
                "summary": "API Create Vehicle Type (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Request Parameters",
                        "name": "VehicleTypeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vehicleTypeModel.CreateVehicleTypeRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/vehicles/types": {
            "get": {
                "description": "View list vehicle type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle Type"
                ],
                "summary": "API List Vehilce Type (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/vehicleTypeModel.GetListVehicleTypeResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/vehicleTypeModel.GetListVehicleTypeResponse"
                            }
                        }
                    }
                }
            }
        },
        "/v1/vehicles/{vehicle_code}": {
            "get": {
                "description": "Get detail vehicle for CMS Transport",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vehicle"
                ],
                "summary": "API Get Detail Vehicle (CMS Transport)",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "Vehicle Code",
                        "name": "vehicle_code",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/vehicleModel.DetailVehicleResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/vehicleModel.DetailVehicleResponse"
                        }
                    }
                }
            }
        },
        "/v2/client": {
            "post": {
                "description": "Create client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client V2"
                ],
                "summary": "API Create Client V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Request Parameters",
                        "name": "CreateClientRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientModel.CreateClientRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v2/client/list": {
            "get": {
                "description": "View list client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client V2"
                ],
                "summary": "API List Client V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "created_at",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "example": "asc",
                        "description": "Sort direction",
                        "name": "sort_direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 25,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    }
                }
            }
        },
        "/v2/client/type": {
            "post": {
                "description": "Create client type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Type V2"
                ],
                "summary": "API Create Client Type V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Request Parameters",
                        "name": "CreateClientTypeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientTypeModel.CreateClientTypeRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v2/client/type/list": {
            "get": {
                "description": "View list client type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Type V2"
                ],
                "summary": "API List Client Type V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "created_at",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "example": "asc",
                        "description": "Sort direction",
                        "name": "sort_direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 25,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    }
                }
            }
        },
        "/v2/client/type/{id}": {
            "put": {
                "description": "Update client type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Type V2"
                ],
                "summary": "API Update Client Type V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Client Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Parameters",
                        "name": "UpdateClientTypeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientTypeModel.UpdateClientTypeRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Delete client type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Type V2"
                ],
                "summary": "API Delete Client Type V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Client Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v2/client/type/{id}/detail": {
            "get": {
                "description": "View detail client type",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client Type V2"
                ],
                "summary": "API Detail Client Type V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Client Type ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/clientTypeModel.DetailClientTypeResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/clientTypeModel.DetailClientTypeResponse"
                        }
                    }
                }
            }
        },
        "/v2/client/{id}": {
            "put": {
                "description": "Update client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client V2"
                ],
                "summary": "API Update Client V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Parameters",
                        "name": "UpdateClientRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/clientModel.UpdateClientRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Delete client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client V2"
                ],
                "summary": "API Delete Client V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v2/client/{id}/detail": {
            "get": {
                "description": "View detail client",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client V2"
                ],
                "summary": "API Detail Client V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/clientModel.DetailClientResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/clientModel.DetailClientResponse"
                        }
                    }
                }
            }
        },
        "/v2/product/category": {
            "post": {
                "description": "Create product category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category V2"
                ],
                "summary": "API Create Product Category V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Request Parameters",
                        "name": "CreateProductCategoryRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/productCategoryModel.CreateProductCategoryRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v2/product/category/list": {
            "get": {
                "description": "View list product category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category V2"
                ],
                "summary": "API List Detail Product Category V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "created_at",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "example": "asc",
                        "description": "Sort direction",
                        "name": "sort_direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 25,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "enum": [
                            true,
                            false
                        ],
                        "type": "boolean",
                        "description": "Filter by status",
                        "name": "is_active",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    }
                }
            }
        },
        "/v2/product/category/{id}": {
            "put": {
                "description": "Update product category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category V2"
                ],
                "summary": "API Update Product Category V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Product Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Parameters",
                        "name": "UpdateProductCategoryRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/productCategoryModel.UpdateProductCategoryRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Delete product category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category V2"
                ],
                "summary": "API Delete Product Category V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Product Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v2/product/category/{id}/detail": {
            "get": {
                "description": "View detail product category",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Product Category V2"
                ],
                "summary": "API Detail Product Category V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Product Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/productCategoryModel.DetailProductCategoryResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/productCategoryModel.DetailProductCategoryResponse"
                        }
                    }
                }
            }
        },
        "/v2/segment": {
            "post": {
                "description": "Create segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Segment V2"
                ],
                "summary": "API Create Segment V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Request Parameters",
                        "name": "CreateSegmentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/segmentModel.CreateSegmentRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v2/segment/list": {
            "get": {
                "description": "View list segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Segment V2"
                ],
                "summary": "API List Segment V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search Term",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "created_at",
                        "description": "Field to sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "asc",
                            "desc"
                        ],
                        "type": "string",
                        "example": "asc",
                        "description": "Sort direction",
                        "name": "sort_direction",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 25,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/pagingModel.DataPagingResponse"
                        }
                    }
                }
            }
        },
        "/v2/segment/{id}": {
            "put": {
                "description": "Update segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Segment V2"
                ],
                "summary": "API Update Segment V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Segment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Parameters",
                        "name": "UpdateSegmentRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/segmentModel.UpdateSegmentRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "Delete segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Segment V2"
                ],
                "summary": "API Delete Segment V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Segment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v2/segment/{id}/detail": {
            "get": {
                "description": "View detail segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Segment V2"
                ],
                "summary": "API Detail Segment V2",
                "parameters": [
                    {
                        "type": "string",
                        "example": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJqdGkiOiJiNWQxNjY5NS0xZjJlLTQ1...",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Segment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Response Success",
                        "schema": {
                            "$ref": "#/definitions/segmentModel.DetailSegmentResponse"
                        }
                    },
                    "400": {
                        "description": "Response Error",
                        "schema": {
                            "$ref": "#/definitions/segmentModel.DetailSegmentResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "areaModel.CreateAreaRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "areaModel.DetailAreaResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "areaModel.GetListAreaResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "brandModel.GetListBrandResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "clientModel.CreateClientRequest": {
            "type": "object"
        },
        "clientModel.DetailClientResponse": {
            "type": "object",
            "properties": {
                "clientName": {
                    "type": "string"
                },
                "client_address": {
                    "type": "string"
                },
                "client_code": {
                    "type": "string"
                },
                "client_email": {
                    "type": "string"
                },
                "client_logo": {
                    "type": "string"
                },
                "client_phone": {
                    "type": "string"
                },
                "client_type_id": {
                    "type": "integer"
                },
                "establish_date": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "latitude": {
                    "type": "string"
                },
                "longitude": {
                    "type": "string"
                },
                "npwp": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "clientModel.UpdateClientRequest": {
            "type": "object"
        },
        "clientTypeModel.CreateClientTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "clientTypeModel.DetailClientTypeResponse": {
            "type": "object",
            "properties": {
                "client_type_id": {
                    "type": "integer"
                },
                "client_type_name": {
                    "type": "string"
                }
            }
        },
        "clientTypeModel.UpdateClientTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "pagingModel.DataPagingResponse": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "per_page": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_record": {
                    "type": "integer"
                }
            }
        },
        "productCategoryModel.CreateProductCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "productCategoryModel.DetailProductCategoryResponse": {
            "type": "object",
            "properties": {
                "product_category_id": {
                    "type": "integer"
                },
                "product_category_name": {
                    "type": "string"
                },
                "product_category_status": {
                    "type": "string"
                }
            }
        },
        "productCategoryModel.UpdateProductCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "status_product_category": {
                    "type": "boolean"
                }
            }
        },
        "segmentModel.CreateSegmentRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "segmentModel.DetailSegmentResponse": {
            "type": "object",
            "properties": {
                "segment_id": {
                    "type": "integer"
                },
                "segment_name": {
                    "type": "string"
                }
            }
        },
        "segmentModel.UpdateSegmentRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "transmissionModel.Transmission": {
            "type": "string",
            "enum": [
                "manual",
                "automatic",
                "cvt"
            ],
            "x-enum-varnames": [
                "Manual",
                "Automatic",
                "CVT"
            ]
        },
        "vehicleModel.BrandData": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "vehicleModel.DetailVehicleResponse": {
            "type": "object",
            "properties": {
                "brand": {
                    "$ref": "#/definitions/vehicleModel.BrandData"
                },
                "code": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "fuel_type": {
                    "type": "string"
                },
                "image": {
                    "type": "string"
                },
                "max_bag_number": {
                    "type": "integer"
                },
                "model": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "seat_number": {
                    "type": "integer"
                },
                "transmission": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "vehicleTypeModel.CreateVehicleTypeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "vehicleTypeModel.GetListVehicleTypeResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}